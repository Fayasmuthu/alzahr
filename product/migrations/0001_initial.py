# Generated by Django 5.2.6 on 2025-10-05 15:53

import django.core.validators
import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.CharField(default=False, max_length=100)),
                ('image', models.ImageField(upload_to='banner/img')),
                ('other1', models.BooleanField(default=False)),
                ('other2', models.BooleanField(default=False)),
                ('other3', models.BooleanField(default=False)),
                ('other4', models.BooleanField(default=False)),
                ('other5', models.BooleanField(default=False)),
                ('other6', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Banner',
                'ordering': ('image',),
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='brand/img')),
                ('active', models.BooleanField(default=True)),
                ('filter_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('image', models.ImageField(default=False, upload_to='categories/img')),
                ('icon_image', models.ImageField(default=False, upload_to='categories/icon')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Private', 'Private')], default='Published', max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('Category1', models.BooleanField(default=False)),
                ('Category2', models.BooleanField(default=False)),
                ('Category3', models.BooleanField(default=False)),
                ('Category4', models.BooleanField(default=False)),
                ('Category5', models.BooleanField(default=False)),
                ('Category6', models.BooleanField(default=False)),
                ('Category7', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('color', models.CharField(blank=True, help_text='Hex color, e.g., #FF5733', max_length=7, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Producttype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('active', models.BooleanField(blank=True, default=True, null=True)),
                ('is_combo', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product type',
                'verbose_name_plural': 'Product type',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('display_title', models.CharField(blank=True, max_length=200, null=True)),
                ('stock', models.IntegerField(default='1')),
                ('details', tinymce.models.HTMLField(blank=True, null=True)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('model_number', models.CharField(blank=True, max_length=200, null=True)),
                ('rating', models.FloatField(default=5.0, validators=[django.core.validators.MaxValueValidator(5.0)], verbose_name='Product Rating (max: 5)')),
                ('image', models.ImageField(help_text=' The recommended size is 700x955 pixels.', upload_to='products/img')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_arrive', models.BooleanField(default=False)),
                ('is_popular', models.BooleanField(default=False)),
                ('is_best_seller', models.BooleanField(default=False)),
                ('is_offer', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True)),
                ('meta_description', models.TextField(blank=True, max_length=500, null=True)),
                ('other1', models.BooleanField(default=False)),
                ('other2', models.BooleanField(default=False)),
                ('other3', models.BooleanField(default=False)),
                ('other4', models.BooleanField(default=False)),
                ('other5', models.BooleanField(default=False)),
                ('section1', models.BooleanField(default=False)),
                ('section2', models.BooleanField(default=False)),
                ('section3', models.BooleanField(default=False)),
                ('section4', models.BooleanField(default=False)),
                ('section5', models.BooleanField(default=False)),
                ('section6', models.BooleanField(default=False)),
                ('section7', models.BooleanField(default=False)),
                ('section8', models.BooleanField(default=False)),
                ('section9', models.BooleanField(default=False)),
                ('section10', models.BooleanField(default=False)),
                ('brand', models.ForeignKey(blank=True, default='Generic', null=True, on_delete=django.db.models.deletion.CASCADE, to='product.brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.color')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Producttype', to='product.producttype')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AvailableSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, choices=[('Kg', 'Kilogram'), ('pc', 'Piece'), ('g', 'Gram'), ('Itr', 'Liter'), ('ml', 'Milliliter'), ('m', 'Meter'), ('cm', 'Centimeter')], max_length=10, null=True)),
                ('sale_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('regular_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('is_stock', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
            options={
                'verbose_name': 'Available Size',
                'verbose_name_plural': 'Available Sizes',
                'ordering': ('sale_price',),
            },
        ),
        migrations.CreateModel(
            name='Available',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('regular_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('is_stock', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
            options={
                'verbose_name': 'Available ',
                'verbose_name_plural': 'Available',
                'ordering': ('sale_price',),
            },
        ),
        migrations.CreateModel(
            name='ProductFeatures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product', verbose_name='Product Information')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text=' The recommended size is 800x600 pixels.', upload_to='products/img-detail')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ('product',),
            },
        ),
        migrations.CreateModel(
            name='ProductInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=50)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product', verbose_name='Product Information')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Customer Rating (1 to 5)')),
                ('fullname', models.CharField(max_length=255)),
                ('headline', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approval', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='product.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('image', models.ImageField(blank=True, default=False, null=True, upload_to='subcategories/img')),
                ('icon_image', models.ImageField(default=False, upload_to='subcategories/icon')),
                ('color', models.CharField(blank=True, help_text='Hex color, e.g., #FF5733', max_length=7, null=True)),
                ('active', models.BooleanField(blank=True, default=True, null=True)),
                ('is_combo', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='product.category')),
            ],
            options={
                'verbose_name': 'Subcategory',
                'verbose_name_plural': 'Subcategories',
                'ordering': ('title',),
            },
        ),
        migrations.AddField(
            model_name='producttype',
            name='Subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_types', to='product.subcategory'),
        ),
    ]
